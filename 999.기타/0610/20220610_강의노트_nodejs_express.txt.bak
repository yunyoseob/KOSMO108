2022-06-10
-----------------------------

http 모듈
=======================================
listen(port, [hostname], [backlog], [callback])	
	서버를 실행하여 대기 시킨다.
close([callback])	
	서버를 종료한다.
writeHead(statusCode[, statusMessage][, headers])
	응답으로 보낼 헤더를 만든다.
write(chunk[, encoding][, callback])
	응답 본문(body) 데이터를 만든다. 여러 번 호출될 수 있다.
end([data][, encoding][, callback])
	클라이언트로 응답을 전송한다.
	파라미터에 데이터가 들어 있다면 이 데이터를 포함시켜 응답을 전송한다.
	클라이언트의 요청이 있을 때 한 번은 호출되어야 응답을 보내며,
	콜백 함수가 지정되면 응답이 전송된 후 콜백 함수가 호출된다.

이벤트 
connection	클라이언트가 접속하여 연결이 만들어질 때 발생하는 이벤트
request		클라이언트가 요청할 때 발생하는 이벤트
close		서버를 종료할 때 발생하는 이벤트 

Content-Type 헤더 값 MIME Type
text/plain	일반 텍스트 문서
text/html	HTML 문서
text/css	CSS 문서
text/xml	XML 문서	
image/jpeg	JPEG 파일
image/png	PNG 파일
video/mpeg	MPEG 비디오 파일 
audio/mp3	MP3 음악파일
application/zip	ZIP 압축 파일



익스프레스 서버 Express Server 주요 메소드
=======================================
set(name, value)	서버 설정을 위한 속성을 지정한다. 
get(name)	서버 설정을 위해 지정한 속성을 꺼내 온다.
get([path,] function)	특정 패스로 요청된 정보를 처리한다.
use([path,] function[,function....])	미들웨어 함수를 사용한다.


익스프레스 서버 set 메소드 주요 속성
-------------------------------------
env			서버 모드를 설정한다.
views		뷰들이 들어 있는 폴더 또는 폴더 배열을 설정한다.
view engine	디폴트로 사용할 뷰 엔진을 설정한다. ejs나 pug를 많이 사용한다.


익스프레스 express의 요청 객체와 응답 객체
-------------------------------------
send([body])	클라이언트에 응답 데이터를 보낸다. 전달할 수 있는 데이터는 
				HTML 문자열, Buffer 객체, JSON 객체, JSON 배열이다.
status(code)	HTTP 상태 코드를 반환한다. 상태 코드는 end()나 send() 같은
				전송 메소드를 추가로 호출해야 전송할 수 있다.
sendStatus(statusCode)	HTTP 상태 코드를 반환한다. 상태 코드는 상태 메시지와 함께 전송된다.
redirect([status,] path)	웹 페이지 경로를 강제로 이동시킨다.
render(view [, locals][, callback])	뷰 엔진을 사용해 문서를 만든 후 전송한다.


익스프레스 express에서 요청 객체에 추가한 헤더와 파라미터 보기
-------------------------------------
query	클라이언트에서 GET 방식으로 전송한 요청 파라미터를 확인한다.
		예) req.query.name
body	클라이언트에서 POST 방식으로 전송한 요청 파라미터를 확인한다.
		단, body-parser와 같은 외장 모듈을 사용해야 한다.
		예) req.body.name
header(name)	헤더를 확인한다

serve-static	static 미들웨어 
				특정 폴더의 파일들을 특정 패스로 접근할 수 있도록 만들어 준다.

body-parser		body-parser 미들웨어	
				POST 요청시 사용
				POST/GET 방식
				var paramId = req.body.id || req.query.id;

var router = express.Router();
				router.route(요청 패스).get(실행될 함수);
				router.route(요청 패스).post(실행될 함수);
get(callback)		GET 방식으로 특정 패스 요청이 발생했을 때 콜백함수 지정
post(callback)		POST 방식으로 특정 패스 요청이 발생했을 때 콜백함수 지정
put(callback)		PUT 방식으로 특정 패스 요청이 발생했을 때 콜백함수 지정
delete(callback)	DELETE 방식으로 특정 패스 요청이 발생했을 때 콜백함수 지정
all(callback)		모든 요청 방식을 처리하며, 특정 패스 요청이 발생했을 때 콜백함수 지정


패키지 인스톨 
======================================


npm install express
npm install http
npm install path
npm install body-parser
npm install cookie-parser
npm install server-static
	npm install errorhandler
	npm install express-error-handler
npm install cookie-parser
npm install express-session
npm install mongodb