2022-04-08
-----------------------------

JSP : Java Server Page 

Java : java 언어를 사용한다. 
Server : 서버에서 실행된다. : WAS 서버에서 실행된다.
Page : 웹 페이지(웹 문서 : HTML)에서 실행된다. 

Page(웹 문서) 단위로 이동 기술이다. 
Page 에서 Page 로 이동하면서 데이터를 전달하는 역활을 한다. 

-----------------------------------------
jsp 
.NET	: 페이지 , 문단 단위로 이동 기술 
php 
-----------------------------------------

이클립스 기준
--------------------------------------------------------
1.	Context/WebContent -> New - JSP File
2.	확장자 *.jsp
3.	HTML, CSS, JavaScript 등 Client Side Script 코드에 
	자바 코드를 삽입해서 만드는 페이지
4.	서버에서 동작하는 언어 : Server Side Script(Language)
5.	동작 방식 : 최초 컴파일 과정일 때는 매우 느리다.
	test.jsp 화일을 요청하면
		test.jsp가 서블릿으로 변경 test_jsp.java (서블릿 Servlet)
		test_jsp.java 가 컴파일 됨 test_jsp.class (클래스 파일)
	test_jsp.class 가 실행 됨
	\el_web_work\.metadata\.plugins\org.eclipse.wst.server.core\
	tmp0\work\
	Catalina\localhost\kosMember\org\apache\jsp\kosmem


JSP 구성 요소
--------------------------------------------------------
1. 스크립트적인 요소 (프로그래밍적인 요소)

1.1 스크립틀릿 : <% %> : 가장 많이 사용하는 요소
	<% 자바 코드 %>

1.2	지시자 : MIME Type, import, JSTL
	<%@ page contentType="text/html; charset=UTF-8" %>
	<%@ page import="java.util.Date" %>
	<%@ include file="file_name.html" %>
	<%@ taglib prefix="c" url="http://java.sun.com/jsp/jstl/core" %>

1.3	표현식 : 값을 출력 : 문장 statement 종결 ; 세미콜론은 사용하지 않음
	<%= 변수명 %>
	<%= 수식 %>
	<%= 메소드 호출문 %>

1.4 선언문 : 메소도 정의 : 별도의 클래스에 구현
	<%! public void 메소드명(매개 변수{ 코드 구현 } %>



2. UI 요소 (화면구현 요소)
--------------------------------------------------------
HTML
CSS
JavaScript, jQuery
Ajax
JSON, XML



3. JSP Action Tag 
--------------------------------------------------------
<jsp: useBean ~ />		객체를 생성하는 태그 
<jsp: setProperty ~ />	DTO(VO) 객체에 있는 setter Method 호출
<jsp: getProperty ~ />	DTO(VO) 객체에 있는 getter Method 호출
================================================================
	<jsp: forward ~ />		request.forward() 방식으로 동적 페이지 전환
<jsp: param ~ />		페이지 전환시 매개 변수 전달
<jsp: include ~ />		특정 페이지를 포함
================================================================
		
정적인 인클루드 : 안 변화는 페이지이 : 홈페이지 footer 로 사용한다. 
	<%@ include file="file-name.html" %> 
동적인 인클루드 : 데이터를 변경하고 싶으면 
	<jsp:include page="file.jsp" ?>		
	
액션 포워드 싱글태그 
	<jsp:forward page="file.jsp" />
액션 포워드 더블태그 : 파라미터를 넘길 수 있다.
	<jsp:forward page="file.jsp">
		<jsp:param name="id" value="hong" />
	</jsp:forward>

액션 인쿨루드 싱글태그
	<jsp:include page="file.jsp" />
액션 인쿨루드 더블태그 : 파라미터를 넘길 수 있다. 
	<jsp:include page="file.jsp">
		<jsp:param name="id" value="hong" />
	</jsp:include>



4. 내장 객체
--------------------------------------------------------
	requet		javax.servlet.http.HttpServletRequest	웹 브라우저의 요청 정보를 저장하고 있는 객체
				javax.servlet.ServletReqeust
	response	javax.servlet.http.HttpServletResponse	웹 브라우저의 요청에 대한 응답 정보를 저장하고 있는 객체
				javax.servlet.ServletResponse
out			javax.servlet.jsp.JspWriter				JSP페이지의 출력할 내용을 가지고 있는 출력 스트림 객체
	session		javax.servlet.http.ServletContext		하나의 웹 브라우저 내에서 정보를 유지하기 위한 
													세션 정보를 저장하고 있는 객체
	application	javax.servlet.ServletContext			웹 애플리케이션의 Context의 정보를 담고 있는 객체
pageContext	javax.servlet.jsp.PageContext			JSP페이지에 대한 정보를 저장하고 있는 객체
page		java.lang.Object						JSP 페이지를 구현한 자바 클래스 객체
config		javax.servlet.ServletConfig				JSP 페이지에 대한 설정 정보를 담고 있는 객체
exception	java.lang.Throwable						JSP 페이지에서 예외가 발생한 경우 사용하는 객체


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
setAttribute(), getAttribute()
---------------------------------------------
request, session, application 내장 객체에서 
속성(attribute)값을 저장하고 읽을 수 있는 함수 
jsp 페이지 및 서블릿 Servlet 간 정보를 주고 받음

void setAttribute(String key, Object value)
	해당 내장 객체의 속성값을 설정하는 메소드, 
	key 속성명에 value 속성값 지정
java.util.Enumeration getAttributeNames()
	해당 내장 객체의 속성명을 일어오는 메소드, 
	모든 속성의 이름을 얻어옴
Object getAttribute(String key)
	key 속성명에 해당하는 속성값 반환
void removeAttribute(String key)
	key 속성명에 해당하는 속성 제거
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


5. Scope : Context 내에서 객체 공유하는 내장 객체 영역
--------------------------------------------------------
page 
	pageContext 내장 객체를 이용하여 바인딩(연결) 객체를 공유
	객체를 공유한 jsp 페이지(현재 페이지)에서만 사용 가능 

request
	request 내장 객체를 이용하여 바인딩(연결) 객체를 공유
	객체를 공유한 jsp 페이지(현재 페이지)와 요청한 jsp 페이지에서 사용 가능 

session
	session 내장 객체를 이용하여 바인딩(연결) 객체를 공유
	모든 jsp 페이지에서 사용 가능
	세션 속성 값을 설정하여 지정한 시간 또는 웹 브라우저가 열려 있는 동안 사용 가능 

application	
	application 내장 객체를 이용하여 바인딩(연결) 객체를 공유
	Context내 모든 jsp 페이지에서 사용 가능
	웹 브라우저가 종료되어도 서버가 중지되기 전까지사용 가능 


6. 표현식 EL(Expression Language) 
--------------------------------------------------------
기본 형식 : ${ 출력값 }
${ param.변수명 }					${ param.addr }
	${ 객체이름.속성이름 }				${ mvo.addr }
	${ 객체이름 }						${ irum }
${ paramValues.배열이름[인덱스] }	${ paramValues.animal[0] }
${ 수식(계산식, 비교 연산) }			${ param.num1 + param.num2 }
${ 배열이름[인덱스] }				${ study[0] }
${ 배열이름[인덱스] }				${ study[0].irum }


7. JSTL(JSP Standard Tag Library)
--------------------------------------------------------
JSTL 라이브러리 설치
	https://tomcat.apache.org/ - Download - Taglibs -
	오른쪽 상단 Apache Standard Taglib 링크 클릭 
	
	Standard 1.1.2 버전 다운로드 
	WebContent\WEB-INF\lib\jstl.jar, standard.jar <- 복사

JSTL Tag 종류 : JSP 문서 상단에 지시자를 작성하고 사용	
		core : 기본 프로그래밍 Tag (변수, 배열, if, for, switch~case 등)
			<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

	format : 포맷 Tag (날짜, 시간, 통화 기호 등 표시 형식)
		<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>


