2022-06-08
1. 
	npm 인스톨 전역 http-server모듈을 이용하여, 저장
	CMD에 아래 내용을 기입 시작
	-------
	C:\00.KOSMO108_PGW\50.react\node_http>npm i -g http-server --save
	==> node 패키지 인스톨러로 http-server 모듈 사용하겠다,
		save는 하위버전에서 사용, 상위버전은 X
		특별히 달라지는건 없음


결과 
	C:\Users\Kosmo\AppData\Roaming\npm\http-server -> C:\Users\Kosmo\AppData\Roaming\npm\node_modules\http-server\bin\http-server
	+ http-server@14.1.1
	added 39 packages from 43 contributors in 3.838s


2. 
	C:\00.KOSMO108_PGW\50.react\node_http>http-server -p 8000
	==> 해당 파일을 http-server모듈을 이용하여 8000번 포트를 통해 서버로 열겠다.

결과
	Starting up http-server, serving ./
	http-server version: 14.1.1
	http-server settings:
	CORS: disabled
	Cache: 3600 seconds
	Connection Timeout: 120 seconds
	Directory Listings: visible
	AutoIndex: visible
	Serve GZIP Files: false
	Serve Brotli Files: false
	Default File Extension: none
	Available on:
	  http://192.168.219.125:8000
	  http://127.0.0.1:8000
	Hit CTRL-C to stop the server

3. 주소창에 localhost:8000 접속 시 접속 가능
==> node.js에서 제공하는 서버모듈을 사용하여 자바 스프링의 welcome file역할을 제공한다.
	(welcomefile = web.xml의 index.jsp)
	http 모듈의 createServer와 햇갈리지 말 것.


=========================================================================================================
40.node = cmd의 node사용 
50.react = cmd에서 server를 킨 뒤 localhost:8000번으로 접속 



구글 파이어베이스 파푸시 put메소드 node.js사용,
소켓채팅(소켓서버노드제이에스 클라이언트윈도우에있는스프링)





=========================================================================================================
파이썬 버전은 3.8.10
처음에 인스톨 파일 틀 때 ADD path Python 3.8 체크하기

파이썬은 대화형 프로그램입니다.

파이참 에디터 커뮤니티 버전으로 최신거받으세요.(프로페셔널은 1달짜리)
인스톨할 때 체크 다 하세요.

인스톨 끝나고 처음 실행할 때, 선택할 수 있는 3가지 중 뉴 프로젝트 누르세요.

워크스페이스는(virtualenv) 60.python으로 하세요.

=========================================================================================================

이하 강사님 강의노트 

2022-06-08
-------------------------------


http-server 설치 
---------------------------

npm i -g http-server --save
npm install --global http-server --save 

C:\00.KOSMO108\50.react\node_http>npm i -g http-server --save
C:\Users\kosmo\AppData\Roaming\npm\http-server -> C:\Users\kosmo\AppData\Roaming\npm\node_modules\http-server\bin\http-server
+ http-server@14.1.1
updated 1 package in 1.281s


http-server 실행하기 
---------------------------
-p : 포트 사용하기 옵션 
8000 : 8000 port 열기 

C:\00.KOSMO108\50.react\node_http>http-server -p 8000
Starting up http-server, serving ./

http-server version: 14.1.1

http-server settings:
CORS: disabled
Cache: 3600 seconds
Connection Timeout: 120 seconds
Directory Listings: visible
AutoIndex: visible
Serve GZIP Files: false
Serve Brotli Files: false
Default File Extension: none

Available on:
  http://192.168.219.152:8000
  http://127.0.0.1:8000
Hit CTRL-C to stop the server


http-server 서버 닫기 
---------------------------
 CTRL-C

 http-server stopped.

C:\00.KOSMO108\50.react\node_http>

브라우저에서 요청하기 
http://localhost:8000/


node.js http-server 사용하기 

$ npm init -y
$ npm install http-server -g 
$ http-server 
$ http-server -p 8089 

$ http-server [path] [options]
path : 웹문서 루트 경로 

$ http-server ./node-http
$ http-server -p 8089
$ http-server -h

-p 또는 --port 사용할 포트를 지정 (디폴트는 8080)
-d 디렉토리 파일목록 가능여부 (디폴트는 true)
-i 자동 인덱스 사용여부 (디폴트는 true)
-g 또는 --gzip 활성화할 경우에 xxx.js 요청에 대해서 xxx.js.gz 파일이 존재하는지 확인하여 서비스
-s 또는 --silent 로그 메시지를 출력하지 않습니다
--cors Accss-Control-Allow-Origin 헤더를 사용하여 CORS 기능을 활성화
-c 캐시 타임아웃을 초(Seconds) 단위로 지정합니다. (예: -c10 은 캐쉬 타임아웃 10초)
--log-ip 로깅시 클라이언트 IP 주소를 출력합니다. (디폴트는 false)
-S 또는 -ssl https 통신을 활성화 합니다. (인증서 설정 필요)
-C 또는 --cert SSL 인증서 파일의 경로를 지정합니다.
-K 또는 --key SSL 키 파일의 경로를 지정합니다.
-h 또는 --help 도움말을 출력합니다.
-v 또는 --version 버전정보를 출력합니다.



