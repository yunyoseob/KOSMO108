2022-06-07

JSTL : forEach 구문
el : 출력하는 구문
이 두 가지를 공부하세요.

CDN : 콘텐츠를 효율적으로 전달하기 위해 여러 노드를 가진 네트워크에 데이터를 저장하여 제공하는 시스템
	  일부 캐싱을 가짐(tmp파일 저장), 구분해서 저장해야 한다.
	  콘텐츠 : 라이브러리 등

바벨 CDN : 리엑트를 HTML 형태로 사용하게 해줌

현재 자바 스크립트는 ECMA 스크립트 3을 사용하며, 5를 섞어서 사용 중
(3과 5의 차이를 찾기)

ECMAScript3 ES3 : 1999년
ECMAScript5 ES5 : 2009년
ECMAScript6 ES6 : 2015년 : const, let 키워드 추가, arrow문접 지원

상수(const) : 1. 변경하면 안 되는 리터럴(자바) / 변경하면 안 되는 값(JS) 
				CF) JS에서는 왜 값? : 데이터타입 선언을 안해서 넓어
			 2. static(메모리)/final(변경불가) 키워드 사용

숙제 : 바벨이 뭘 까요?
--바벨은 이전 버전의 javascript를 다음 버전의 javascript로 바꿔주는 역할을 한다. (ES5 를 ES6로) 



======================================================================
Node.js

논블로킹(Non-blocking) : 나중에 공부하세요

-모든 다운로드 보기 클릭(둘 다 비슷해.)
https://nodejs.org/ko/download/
https://nodejs.org/dist/

v14.16.0/   
node-v14.16.0-x64.msi  (설치버전, 인스톨진행)
------------------------------------------

--cmd--
버전체크
C:\Users\Kosmo>node -v
v14.16.0

C:\Users\Kosmo>npm -v
6.14.11

C:\Users\Kosmo>node


node.js는 확장자 .js를 만들어서 사용합니다..(기존 브라우저 콘솔에서 사용하던 것을 서버로.)




npm : Node Package(알고보면 모듈) Manager : 노드 페키지 인스톨러
-------------------------------------
현재 디렉토리에 NPM 기반으로 프로젝트를 생성
패키지이름, 버전, 설명등 입력 package.json 생성
cmd창에 해당 디렉토리 들어가서 아래 두 개 중 하나 키인하면 package.json생성
C:\00.KOSMO108_PGW\40.node\node_test>npm init (컨텍스트역할 파일 만들기)

C:\00.KOSMO108_PGW\40.node\node_test>npm init -y : 디폴트 값으로 프로젝트 생성
=========================================
{
  "name": "node_test",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}
=========================================
패키지 설치
node_modules 디렉토리 생성(node.js는 라이브러리를 모듈이라 칭한다.)
--> package-lock.json 파일 생성

npm install 패키지이름 
npm install 패키지이름 -g(--global): 전역설치
npm install 패키지이름 --save(devDependencies 추가, npm5 기본옵션으로 추가)

npm install패키지이름
-P(--save-prod) : pacage.json의 dependencies에 패키지를 등록합니다(default)
-D(--save-dev) : pacage.json의 devDepend
-O (--save-optional) : package.json의 optionalDependencies에 패키지를 등록합니다.
--no--save : dependencies에 패키지를 등록하지 않습니다.


버전은 세 자리로 구성
----------------------------
major 버전
	하위 버전이 호환이 안될 정도로 패키지의 내용 수정
	주 버전이 0 이면, 초기 개발 중
	1부터는 정식 버전이다.	
minor 버전 
	하위 버전이 호환이 되는 업데이트 
patch 버전
	새로운 기능이 추가되었다기 보다는
	기존 기능에 문제가 있어 수정한 것을 내놓았을 때


‘^’, ‘~’  
^(캐럿): minor 버전까지만 설치 또는 업데이트한다.
~(틸트): patch 버전까지만 설치 또는 업데이트한다.


C:\00.KOSMO108\40.node
C:\00.KOSMO108\40.node\node_test
C:\00.KOSMO108\40.node\node_test>node init -y

C:\00.KOSMO108\40.node\node_test\01_js


Template literals 
----------------------------
템플릿 리터럴은 내장된 표현식을 허용하는 문자열 리터럴입니다. 
여러 줄로 이뤄진 문자열과 문자 보간기능을 사용할 수 있습니다. 

백틱(``) (grave accent) 을 사용할 수 있습니다. 

플레이스 홀더를 이용하여 표현식을 넣을 수 있는데
이는 $와 중괄호( $ {expression} ) 로 표기할 수 있습니다. 


노드에서 모듈
-------------------
exports 전역 객체 
require() 함수 
module 객체 


하나의 함수 안에 모든 기능을 여러개의 함수(독립적인 기능)로 나눈 후 
각 함수를 별도의 파일로 분리 후 메인 파일에서 전체적인 실행 순서나 흐름만을 제어 
별도로 분리된 파일을 노드에서는 모듈이라고 부름

     ===================
노드는 CommonJs의 표준 스펙을 따라 모듈을 사용
     ===================
exports 전역 객체 사용
모듈을 만들 때는 module1.js 처럼 별도의 자바스크립트 파일을 만든 후 
그 코드에서 exports 객체를 사용
exports 객체의 속성으로 변수나 함수를 지정하면 
그 속성을 main.js와 같은 메인 자바스크립트 파일에서 불러와 사용

모듈을 불러올 때는 require() 메소드를 사용
모듈로 만들어 둔 파일의 이름을 require() 메소드의 파라미터로 전달한다.
require() 메소드를 호출하면 모듈 객체가 반환된다.
모듈에서 exports 객체에 설정한 속성들은 이 모듈 객체를 통해 접근 할 수 있다.

exports	: 여러 개의 변수나 함수를 각각의 속성으로 추가할 수 있다.
	exports.add = function(a,b){
		return a + b;
	}
	exports.multiply = function(a,b){
		return a * b;
	}

module.exports	: 하나의 변수나 함수 또는 객체를 직접 할당한다.
				  일반적으로는 객체를 그대로 할당
				  이렇게 할당한 객체 안에 넣어 둔 변수나 함수를 
				  메인파일에서도 사용할 수 있다.
	var calc = {};
	calc.add = function(a,b){
		return a + b;
	}
	clac.multiply = function(a,b){
		return a *  b;
	}
	module.exports = calc;

require() : 모듈을 불러올 때 사용하는 함수 
			var 원하는변수명 = require(./모듈파일명);


Sublime 다운 받으세요.
다 받으면,

ctrl shift p, pacage install 쳐서 install package control 엔터(다운)

다 받아지면 팝업창 뜨고, 다시 ctrl shift p, pacage install 키인, 엔터, 새롭게 text필드가 나오면

그다음 emmet 다운받고 sublimecodeintel 다운

지울 때는 package intall remove.

위에 동작 끝나면 ctrl + n 눌러서 새문서 열고 ctrl+s를 눌러 파일을 저장할 때 확장자 html로 저장하고
http:5 키인, 탭키 누르면 HTML 문서가 만들어진다.