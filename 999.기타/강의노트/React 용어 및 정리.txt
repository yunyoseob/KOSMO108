2022-06-09
--------------------

React : 자바스크립트 라이브러리의 하나로서 사용자 인터페이스를 만들기 위해 사용된다. 

리액트는 클래스가 아닌 상수, 함수를 사용해 컴포넌트(엘리먼트, 태그)를 구성한다.
--> const, let을 사용

ES3, ES5, ES6 구별 

프로토 타입 : 생성자, 클래스 등등 쓸 때는 
prototype을 선언해야한다.


2022-06-16
--------------------------

react 에서 사용할 ES6 자바스크립트 문법
===============================================

1. const
	: 상수로써, 변경하면 안되는 값

2. let 
	: 함수 블럭 안에서 선언하여 블럭 밖을 나가지 못한다

3. template string 
	: 백틱(``)을 사용하여 문자열을 조합 하는 것
	플레이스 홀더를 이용하여 표현식을 넣을 수 있는데 ${} 안에서 표기 가능하다.
	

4. module : '파일 단위'이며 + 자바의 패키지 느낌(클래스의 묶음)
	ES6
		export : 함수, 객체, 변수, 상수 등을 외부에 export 할 수 있다.
		export default : 여러개가 아닌 단 하나의 이름만을 외부에 export 하고 싶을 때 사용

		import xxx from './파일이름'

	CommonJS 
		exports : 자원을 사용 할 수 있게 해줌(만들기), 전역객체
		module.exports(우선순위 높음) : 여러개로 exports 할 것을 모아서 한 번에 보내준다
		
		require('파일이름'); : 모듈을 불러올 때 사용하는 함수 , import처럼 자원을 불러서 사용

5. arrow function : 매개변수와 산식 : 람다와 똑같음
	(파라미터1, 파라미터2 ... n) => {}
	익명 함수 , 함수는 재사용하기 위해 쓰지만 한 번만 쓸 거면 굳이 이름이 필요없기 때문에 사용

	호이스팅 : hoisting  : 표현식은 불가능(익명함수를 변수에 대입한 것) : 애로우도 포함
		 +(함수 안에 포함 된 블럭 내부에 정의 된 변수를 
		 함수 맨 처음에 정의하고 undefined로 초기화 한
		 변수처럼 다루는 것(끌어올림))

6. spread operator : 잘 안쓰긴 함
	:  배열, 문자열, 객체 등 반복 가능한 객체를 개별 요소로 분리할 수 있다.
	first, finish : 첫번째 , 마지막 배열에 담긴 값을 가져올 때 선언
	...rest rest 파라미터를 사용하면 함수의 파라미터로 오는 값들을 배열로 전달


7. Asynchronous : 비동기 
	cf)   동기 : 신호를 보내면 순서대로 진행, 만약 받는 쪽에서 다른 일을 하면 보낸 쪽에서 기다림
		비동기 : 일단 받는 쪽에서 일을 다하고 연결이 됨(여기서 연결 됨은 비동기로 봄)
		함수호출을 할 때 원래 순서대로 해야 하는데, 비동기로 하면 먼저 끝나는 애부터 한다.
		그래서 1234 순서가 아니라 아무렇게나 나올 수 있음

	fetch() ~ then() 
	fetch : 예외(비동기 처리에서 발생한 에러와 then 메소드에서 발생한 에러)가 발생하면 호출
	then : then 메소드는 두 개의 콜백 함수를 인자로 전달 받는다. 
			첫 번째 콜백 함수는 성공시 호출되고 
			두 번째 함수는 실패시 호출된다.
	async / await
		async () =>  await 함수()
		async/await 키워드를 사용하면 비동기 코드를 마치 동기 코드처럼 보이게 작성할 수 있다.

	new Promise() : 객체는 비동기 작업이 맞이할 미래의 완료 또는 실패와 그 결과 값을 나타낸다.

		pending		비동기 처리가 아직 수행되지 않은 상태			   resolve 또는 reject 함수가 아직 호출되지 않은 상태
		fulfilled	비동기 처리가 수행된 상태 (성공)				   resolve 함수가 호출된 상태
		rejected	비동기 처리가 수행된 상태 (실패)				   reject 함수가 호출된 상태
		settled		비동기 처리가 수행된 상태 (성공 또는 실패)		   resolve 또는 reject 함수가 호출된 상태
